// Mocks generated by Mockito 5.3.0 from annotations
// in greisy_photos/test/features/landing_page/presentation/bloc/photo/photo_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:omnipro/core/error/faillure.dart' as _i6;
import 'package:omnipro/core/use_cases/use_case.dart' as _i8;
import 'package:omnipro/features/photo_list/domain/entities/photo.dart' as _i7;
import 'package:omnipro/features/photo_list/domain/repository/photo_repository.dart' as _i2;
import 'package:omnipro/features/photo_list/domain/use_cases/get_photo_list_use_case.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePhotoRepository_0 extends _i1.SmartFake implements _i2.PhotoRepository {
  _FakePhotoRepository_0(Object parent, Invocation parentInvocation) : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation) : super(parent, parentInvocation);
}

/// A class which mocks [GetPhotoUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPhotoUseCase extends _i1.Mock implements _i4.GetPhotoListUseCase {
  MockGetPhotoUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PhotoRepository get photoRepository =>
      (super.noSuchMethod(Invocation.getter(#photoRepository), returnValue: _FakePhotoRepository_0(this, Invocation.getter(#photoRepository)))
          as _i2.PhotoRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>> call(_i8.NoParams? params) => (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Photo>>(this, Invocation.method(#call, [params]))))
      as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>);
}
